#define TEST_FILE_LINK_DEPENDENCIES "source/images/png.cpp, source/images/image.cpp"
//"source/images/png.cpp"

#include "source/images/png.h"
#include "tests/test.h"

image createGradientImage(uint32_t height, uint32_t width) {
	image data(height, width);
	std::cout<<data.size()<<std::endl;

	uint32_t heightColorMod = 65535/width;
	uint32_t widthColorMod = 65535/height;

	for(uint32_t i = 0; i < height; i++) {
		for(uint32_t j = 0; j < width; j++) {
			data.getAt(j,i).red = static_cast<uint16_t>(i * heightColorMod);
			data.getAt(j,i).green = static_cast<uint16_t>(i * j * widthColorMod/height);
			data.getAt(j,i).blue = static_cast<uint16_t>(j * widthColorMod);
			data.getAt(j,i).alpha = 0xFFFF;
		}
	}
	return data;
}

TEST(PNGTest, createPNG_16bit_alpha)
{
	image data = createGradientImage(2, 3);
	PngImage parser;
	std::vector<uint8_t> bytes = parser.createPNG(data, true, 16, 0.001f);

	std::vector<uint8_t> expected = {
		0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,
		0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
		0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02,
		0x10, 0x06, 0x00, 0x00, 0x00, 0xcd, 0xe4, 0xba,
		0x59, 0x00, 0x00, 0x00, 0x2b, 0x49, 0x44, 0x41,
		0x54, 0x78, 0x9c, 0x63, 0x64, 0x00, 0x83, 0xff,
		0xff, 0x41, 0x64, 0xfd, 0x7f, 0x08, 0xaf, 0x01,
		0x48, 0x33, 0x87, 0x86, 0x82, 0x99, 0x0d, 0xda,
		0xda, 0xf6, 0xff, 0x1d, 0x1a, 0x18, 0x18, 0xb4,
		0xb5, 0x13, 0x1a, 0x1c, 0x18, 0x48, 0x07, 0x00,
		0xf3, 0x4d, 0x0a, 0x74, 0xc3, 0x1a, 0xde, 0x4f,
		0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
		0xae, 0x42, 0x60, 0x82
	};

	EXPECT_EQ(bytes, expected);

}


int main(int argc, char *argv[])
{
	::testing::InitGoogleTest(&argc, argv);
	StaySilentOnSuccess();
	return RUN_ALL_TESTS();
}